{
  "address": "0x8545a455465e263FeFe6E049b9b233A545363efc",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "swapAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "numTokens",
          "type": "uint256"
        }
      ],
      "name": "addSwapContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenIn",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenOut",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        }
      ],
      "name": "getQuote",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenFrom",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenTo",
          "type": "address"
        }
      ],
      "name": "getTradeIndices",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "tokenIndexFrom",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "tokenIndexTo",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "swapAddress",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenIn",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenOut",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "minAmountOut",
          "type": "uint256"
        }
      ],
      "name": "swap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "swapContained",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "tokenRoute",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x8e72376c13326d01be1440a26e99f63a4cd28074ddb8764dfadf28d41ab8a835",
  "receipt": {
    "to": null,
    "from": "0x4ea77424Da100ac856ece3DDfAbd8B528570Ca0d",
    "contractAddress": "0x8545a455465e263FeFe6E049b9b233A545363efc",
    "transactionIndex": 4,
    "gasUsed": "949927",
    "logsBloom": "0x
    "blockHash": "0xb7d63062a57cd058dc70c3694e5a0f93c5aed7c698c807a0b7abdd0426ba459b",
    "transactionHash": "0x8e72376c13326d01be1440a26e99f63a4cd28074ddb8764dfadf28d41ab8a835",
    "logs": [
      {
        "transactionIndex": 4,
        "blockNumber": 11032893,
        "transactionHash": "0x8e72376c13326d01be1440a26e99f63a4cd28074ddb8764dfadf28d41ab8a835",
        "address": "0x8545a455465e263FeFe6E049b9b233A545363efc",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000004ea77424da100ac856ece3ddfabd8b528570ca0d"
        ],
        "data": "0x",
        "logIndex": 38,
        "blockHash": "0xb7d63062a57cd058dc70c3694e5a0f93c5aed7c698c807a0b7abdd0426ba459b"
      }
    ],
    "blockNumber": 11032893,
    "cumulativeGasUsed": "2108488",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "20f2989410bc9d2a28920a8dd2b272d2",
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"swapAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"numTokens\",\"type\":\"uint256\"}],\"name\":\"addSwapContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"name\":\"getQuote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenFrom\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenTo\",\"type\":\"address\"}],\"name\":\"getTradeIndices\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenIndexFrom\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenIndexTo\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"swapAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAmountOut\",\"type\":\"uint256\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"swapContained\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokenRoute\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AMMs/MobiusWrapper.sol\":\"MobiusWrapper\"},\"evmVersion\":\"istanbul\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x00000000d41867734bbee4c6863d9255b2b06ac1\"},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":5000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _setOwner(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _setOwner(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _setOwner(newOwner);\\n    }\\n\\n    function _setOwner(address newOwner) private {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x6bb804a310218875e89d12c053e94a13a4607cdf7cc2052f3e52bd32a0dc50a1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x90565a39ae45c80f0468dc96c7b20d0afc3055f344c8203a0c9258239f350b9f\",\"license\":\"MIT\"},\"contracts/AMMs/IWrapper.sol\":{\"content\":\"// SPDX-License-Identifier: ISC\\n\\n//SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.0;\\n\\ninterface IWrapper {\\n  // function getQuotes(address tokenIn, uint256 amountIn)\\n  //   external\\n  //   view\\n  //   returns (uint256[] memory expectedOut, address[] memory tokensOut);\\n\\n  function getQuote(\\n    address tokenIn,\\n    address tokenOut,\\n    uint256 amountIn\\n  ) external view returns (uint256);\\n\\n  function swap(\\n    address tokenIn,\\n    address tokenOut,\\n    uint256 amountIn,\\n    uint256 minAmountOut\\n  ) external returns (uint256);\\n}\\n\",\"keccak256\":\"0xe28ad8a2e64da6b69dd248a3eeff8544af45bf910ad0d3d0a1e53318a9389e17\",\"license\":\"ISC\"},\"contracts/AMMs/MobiusWrapper.sol\":{\"content\":\"// SPDX-License-Identifier: ISC\\n\\n//SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IWrapper.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ninterface ISwap {\\n  function getTokenIndex(address tokenAddress) external view returns (uint8);\\n\\n  function getToken(uint8 index) external view returns (address);\\n\\n  function calculateSwap(\\n    uint8 tokenIndexFrom,\\n    uint8 tokenIndexTo,\\n    uint256 dx\\n  ) external view returns (uint256);\\n\\n  function swap(\\n    uint8 tokenIndexFrom,\\n    uint8 tokenIndexTo,\\n    uint256 dx,\\n    uint256 minDy,\\n    uint256 deadline\\n  ) external returns (uint256);\\n}\\n\\ncontract MobiusWrapper is IWrapper, Ownable {\\n  mapping(address => mapping(address => address)) public tokenRoute; // token in => token out => swap address\\n  mapping(address => bool) public swapContained;\\n\\n  function addSwapContract(address swapAddress, uint256 numTokens)\\n    external\\n    onlyOwner\\n  {\\n    require(\\n      !swapContained[swapAddress],\\n      \\\"Swap contract has already been added!\\\"\\n    );\\n    swapContained[swapAddress] = true;\\n\\n    ISwap swap = ISwap(swapAddress);\\n    address[] memory tokens = new address[](numTokens);\\n    for (uint256 i = 0; i < numTokens; i++) {\\n      tokens[i] = swap.getToken(uint8(i));\\n    }\\n\\n    // This is technically quadratic, but the number of tokens for a swap contract will *hopefully*\\n    // be around 2 or 3\\n    for (uint256 i = 0; i < numTokens; i++) {\\n      address token_i = tokens[i];\\n      for (uint256 j = 0; j < numTokens; j++) {\\n        if (j != i) {\\n          address token_j = tokens[j];\\n          tokenRoute[token_i][token_j] = swapAddress;\\n        }\\n      }\\n    }\\n  }\\n\\n  function getTradeIndices(address tokenFrom, address tokenTo)\\n    public\\n    view\\n    returns (\\n      uint256 tokenIndexFrom,\\n      uint256 tokenIndexTo,\\n      address swapAddress\\n    )\\n  {\\n    swapAddress = tokenRoute[tokenFrom][tokenTo];\\n    tokenIndexFrom = 0;\\n    tokenIndexTo = 0;\\n    if (swapAddress != address(0)) {\\n      ISwap swap = ISwap(swapAddress);\\n      tokenIndexFrom = swap.getTokenIndex(tokenFrom);\\n      tokenIndexTo = swap.getTokenIndex(tokenTo);\\n    }\\n  }\\n\\n  function _getQuote(\\n    uint256 tokenIndexFrom,\\n    uint256 tokenIndexTo,\\n    uint256 amountIn,\\n    address swapAddress\\n  ) internal view returns (uint256) {\\n    ISwap swap = ISwap(swapAddress);\\n    return\\n      swap.calculateSwap(uint8(tokenIndexFrom), uint8(tokenIndexTo), amountIn);\\n  }\\n\\n  function getQuote(\\n    address tokenIn,\\n    address tokenOut,\\n    uint256 amountIn\\n  ) external view override returns (uint256) {\\n    (\\n      uint256 tokenIndexFrom,\\n      uint256 tokenIndexTo,\\n      address swapAddress\\n    ) = getTradeIndices(tokenIn, tokenOut);\\n    if (swapAddress == address(0)) {\\n      return 0; // Or => OpenMath.MAX_UINT;\\n    }\\n    return _getQuote(tokenIndexFrom, tokenIndexTo, amountIn, swapAddress);\\n  }\\n\\n  function swap(\\n    address tokenIn,\\n    address tokenOut,\\n    uint256 amountIn,\\n    uint256 minAmountOut\\n  ) external override returns (uint256) {\\n    (\\n      uint256 tokenIndexFrom,\\n      uint256 tokenIndexTo,\\n      address swapAddress\\n    ) = getTradeIndices(tokenIn, tokenOut);\\n    require(swapAddress != address(0), \\\"Swap contract does not exist\\\");\\n    ISwap swap = ISwap(swapAddress);\\n    uint256 time = block.timestamp;\\n\\n    IERC20(tokenIn).transferFrom(msg.sender, address(this), amountIn);\\n    require(IERC20(tokenIn).approve(swapAddress, amountIn), \\\"Approval failed\\\");\\n\\n    uint256 actualAmountOut = swap.swap(\\n      uint8(tokenIndexFrom),\\n      uint8(tokenIndexTo),\\n      amountIn,\\n      minAmountOut,\\n      time + 30\\n    );\\n    IERC20(tokenOut).transfer(msg.sender, actualAmountOut);\\n    return actualAmountOut;\\n  }\\n}\\n\",\"keccak256\":\"0x1d22fa2bdfe9ab537211bbcb35b1ee1096d58390512596b7dfe07838510276d4\",\"license\":\"ISC\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/AMMs/MobiusWrapper.sol:MobiusWrapper",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 857,
        "contract": "contracts/AMMs/MobiusWrapper.sol:MobiusWrapper",
        "label": "tokenRoute",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_mapping(t_address,t_address))"
      },
      {
        "astId": 861,
        "contract": "contracts/AMMs/MobiusWrapper.sol:MobiusWrapper",
        "label": "swapContained",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_bool)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_address)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_mapping(t_address,t_address))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => address))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_address)"
      }
    }
  }
}